"use strict";(self.webpackChunkflutter_sdk_docs=self.webpackChunkflutter_sdk_docs||[]).push([[304],{9954:function(e,t,n){n.r(t),n.d(t,{contentTitle:function(){return p},default:function(){return c},frontMatter:function(){return l},metadata:function(){return d},toc:function(){return m}});var a=n(7462),o=n(3366),i=(n(7294),n(3905)),r=n(1736),s=["components"],l={title:"Authenticate Users"},p=void 0,d={unversionedId:"sdk/kotlin/app-services/authenticate-users",id:"sdk/kotlin/app-services/authenticate-users",title:"Authenticate Users",description:"{+service+} provides an API for authenticating users using any enabled",source:"@site/docs/sdk/kotlin/app-services/authenticate-users.mdx",sourceDirName:"sdk/kotlin/app-services",slug:"/sdk/kotlin/app-services/authenticate-users",permalink:"/docusaurus-realm/sdk/kotlin/app-services/authenticate-users",tags:[],version:"current",frontMatter:{title:"Authenticate Users"},sidebar:"kotlin",previous:{title:"Register Users",permalink:"/docusaurus-realm/sdk/kotlin/app-services/register-users"},next:{title:"Migrate from Java SDK to Kotlin SDK",permalink:"/docusaurus-realm/sdk/kotlin/migrate-from-java-sdk"}},m=[{value:"Log In",id:"log-in",children:[{value:"Anonymous User",id:"anonymous-user",children:[],level:3},{value:"Email/Password User",id:"emailpassword-user",children:[],level:3}],level:2},{value:"Log Out",id:"log-out",children:[],level:2}],u={toc:m};function c(e){var t=e.components,n=(0,o.Z)(e,s);return(0,i.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"{+service+} provides an API for authenticating users using any enabled\nauthentication provider. Instantiate a ",(0,i.kt)("inlineCode",{parentName:"p"},"Credentials")," object and pass\nit to ",(0,i.kt)("a",{parentName:"p",href:"https://docs.mongodb.com/realm-sdks/kotlin/latest/library-sync/-realm%20-kotlin%20-multiplatform%20-s-d-k%20-%20-sync/io.realm.mongodb/-app/login.html"},(0,i.kt)("inlineCode",{parentName:"a"},"app.login()")),"\nmethod to authenticate a user and create a ",(0,i.kt)("a",{parentName:"p",href:"https://docs.mongodb.com/realm-sdks/kotlin/latest/library-sync/-realm%20-kotlin%20-multiplatform%20-s-d-k%20-%20-sync/io.realm.mongodb/-user/index.html"},(0,i.kt)("inlineCode",{parentName:"a"},"User")),"\nobject for that user.\nEach authentication provider corresponds to a\n",(0,i.kt)("a",{parentName:"p",href:"https://docs.mongodb.com/realm-sdks/kotlin/latest/library-sync/-realm%20-kotlin%20-multiplatform%20-s-d-k%20-%20-sync/io.realm.mongodb/-authentication-provider/index.html"},(0,i.kt)("inlineCode",{parentName:"a"},"static helper method")),"\nused to instantiate ",(0,i.kt)("inlineCode",{parentName:"p"},"Credentials")," objects for that\nauthentication provider."),(0,i.kt)("h2",{id:"log-in"},"Log In"),(0,i.kt)("p",null,"You can authenticate users with ",(0,i.kt)("a",{parentName:"p",href:"https://docs.mongodb.com/realm-sdks/kotlin/latest/library-sync/-realm%20-kotlin%20-multiplatform%20-s-d-k%20-%20-sync/io.realm.mongodb/-app/login.html"},(0,i.kt)("inlineCode",{parentName:"a"},"app.login()")),"."),(0,i.kt)("p",null,"If successful, ",(0,i.kt)("inlineCode",{parentName:"p"},"app.login()"),"returns a ",(0,i.kt)("inlineCode",{parentName:"p"},"User")," object.\nIn the event of a failure, ",(0,i.kt)("inlineCode",{parentName:"p"},"app.login()")," throws an\nexception of type ",(0,i.kt)("a",{parentName:"p",href:"https://docs.mongodb.com/realm-sdks/kotlin/latest/library-sync/io.realm.mongodb/-app-exception/index.html"},(0,i.kt)("inlineCode",{parentName:"a"},"AppException")),"."),(0,i.kt)("h3",{id:"anonymous-user"},"Anonymous User"),(0,i.kt)("p",null,"The ",(0,i.kt)("a",{parentName:"p",href:"https://docs.mongodb.com/realm/authentication/anonymous/"},"anonymous authentication provider"),"\nenables users to log in to your application with short-term accounts\nthat store no persistent personal information. To log in with anonymous\nauthentication, create an anonymous credential by calling\n",(0,i.kt)("a",{parentName:"p",href:"https://docs.mongodb.com/realm-sdks/kotlin/latest/library-sync/-realm%20-kotlin%20-multiplatform%20-s-d-k%20-%20-sync/io.realm.mongodb/-authentication-provider/-a-n-o-n-y-m-o-u-s/index.html"},(0,i.kt)("inlineCode",{parentName:"a"},"AuthenticationProvider.ANONYMOUS()")),".\nThen pass the generated credential to ",(0,i.kt)("inlineCode",{parentName:"p"},"app.login()"),"."),(0,i.kt)(r.Z,{language:"kotlin",mdxType:"CodeBlock"},"val app: App = App.create(YOUR_APP_ID)\nrunBlocking {\n    val user = app.login(Credentials.anonymous())\n}\n"),(0,i.kt)("h3",{id:"emailpassword-user"},"Email/Password User"),(0,i.kt)("p",null,"The ",(0,i.kt)("a",{parentName:"p",href:"https://docs.mongodb.com/realm/authentication/email-password/"},"Email/Password authentication provider"),"\nenables users to log in to your application with an email username and\na password. To log in with email/password authentication, create an\nemail/password credential by calling ",(0,i.kt)("a",{parentName:"p",href:"https://docs.mongodb.com/realm-sdks/kotlin/latest/library-sync/-realm%20-kotlin%20-multiplatform%20-s-d-k%20-%20-sync/io.realm.mongodb/-authentication-provider/-e-m-a-i-l_-p-a-s-s-w-o-r-d/index.html"},(0,i.kt)("inlineCode",{parentName:"a"},"AuthenticationProvider.EMAIL_PROVIDER()")),"\nwith the user's email and password. Then pass the generated credential\nto ",(0,i.kt)("inlineCode",{parentName:"p"},"app.login()"),"."),(0,i.kt)(r.Z,{language:"kotlin",mdxType:"CodeBlock"},"val app: App = App.create(YOUR_APP_ID)\nrunBlocking {\n    val user = app.login(Credentials.emailPassword(email, password))\n}\n"),(0,i.kt)("h2",{id:"log-out"},"Log Out"),(0,i.kt)("p",null,"You can log out any user, regardless of the authentication provider used\nto log in, using ",(0,i.kt)("a",{parentName:"p",href:"https://docs.mongodb.com/realm-sdks/kotlin/latest/library-sync/-realm%20-kotlin%20-multiplatform%20-s-d-k%20-%20-sync/io.realm.mongodb/-user/log-out.html"},(0,i.kt)("inlineCode",{parentName:"a"},"user.logOut()")),". This method:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"deletes locally stored user credentials from the device")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"immediately halts any synchronization to and from the user's realms"))),(0,i.kt)("p",null,"Because logging out halts synchronization, you should only log out after\nall local updates have uploaded to the server."),(0,i.kt)(r.Z,{language:"kotlin",mdxType:"CodeBlock"},"user.logOut()\n"))}c.isMDXComponent=!0}}]);