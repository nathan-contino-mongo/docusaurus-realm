"use strict";(self.webpackChunkflutter_sdk_docs=self.webpackChunkflutter_sdk_docs||[]).push([[565],{8215:function(e,n,t){var i=t(7294);n.Z=function(e){var n=e.children,t=e.hidden,a=e.className;return i.createElement("div",{role:"tabpanel",hidden:t,className:a},n)}},9877:function(e,n,t){t.d(n,{Z:function(){return u}});var i=t(7462),a=t(7294),o=t(2389),l=t(9548),r=t(6010),d="tabItem_LplD";function s(e){var n,t,o,s=e.lazy,u=e.block,p=e.defaultValue,m=e.values,c=e.groupId,k=e.className,h=a.Children.map(e.children,(function(e){if((0,a.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),v=null!=m?m:h.map((function(e){var n=e.props;return{value:n.value,label:n.label,attributes:n.attributes}})),f=(0,l.lx)(v,(function(e,n){return e.value===n.value}));if(f.length>0)throw new Error('Docusaurus error: Duplicate values "'+f.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var g=null===p?p:null!=(n=null!=p?p:null==(t=h.find((function(e){return e.props.default})))?void 0:t.props.value)?n:null==(o=h[0])?void 0:o.props.value;if(null!==g&&!v.some((function(e){return e.value===g})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+g+'" but none of its children has the corresponding value. Available values are: '+v.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var b=(0,l.UB)(),N=b.tabGroupChoices,y=b.setTabGroupChoices,x=(0,a.useState)(g),C=x[0],A=x[1],S=[],T=(0,l.o5)().blockElementScrollPositionUntilNextRender;if(null!=c){var D=N[c];null!=D&&D!==C&&v.some((function(e){return e.value===D}))&&A(D)}var _=function(e){var n=e.currentTarget,t=S.indexOf(n),i=v[t].value;i!==C&&(T(n),A(i),null!=c&&y(c,i))},I=function(e){var n,t=null;switch(e.key){case"ArrowRight":var i=S.indexOf(e.currentTarget)+1;t=S[i]||S[0];break;case"ArrowLeft":var a=S.indexOf(e.currentTarget)-1;t=S[a]||S[S.length-1]}null==(n=t)||n.focus()};return a.createElement("div",{className:"tabs-container"},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":u},k)},v.map((function(e){var n=e.value,t=e.label,o=e.attributes;return a.createElement("li",(0,i.Z)({role:"tab",tabIndex:C===n?0:-1,"aria-selected":C===n,key:n,ref:function(e){return S.push(e)},onKeyDown:I,onFocus:_,onClick:_},o,{className:(0,r.Z)("tabs__item",d,null==o?void 0:o.className,{"tabs__item--active":C===n})}),null!=t?t:n)}))),s?(0,a.cloneElement)(h.filter((function(e){return e.props.value===C}))[0],{className:"margin-vert--md"}):a.createElement("div",{className:"margin-vert--md"},h.map((function(e,n){return(0,a.cloneElement)(e,{key:n,hidden:e.props.value!==C})}))))}function u(e){var n=(0,o.Z)();return a.createElement(s,(0,i.Z)({key:String(n)},e))}},6871:function(e,n,t){t.d(n,{R:function(){return i}});var i={kotlin_sdk_version:"0.10.0",kotlinx_coroutines_version:"1.6.0-native-mt"}},5078:function(e,n,t){t.d(n,{ZP:function(){return d}});var i=t(7462),a=t(3366),o=(t(7294),t(3905)),l=["components"],r={toc:[]};function d(e){var n=e.components,t=(0,a.Z)(e,l);return(0,o.kt)("wrapper",(0,i.Z)({},r,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://developer.android.com/studio/index.html"},"Android Studio"),"\nversion 4.2.2 or higher."),(0,o.kt)("li",{parentName:"ul"},"JDK 11 or higher"),(0,o.kt)("li",{parentName:"ul"},"Kotlin Plugin for Android Studio, version 1.5.20 or higher."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://kotlinlang.org/docs/mobile/kmm-plugin-releases.html#release-details"},"Kotlin Multiplatform Mobile (KMM) Plugin"),"\nfor Android Studio, version 0.2.6 or higher."),(0,o.kt)("li",{parentName:"ul"},'A KMM App created using the "KMM Application" template in Android\nStudio. Follow the instructions in the\n',(0,o.kt)("a",{parentName:"li",href:"https://kotlinlang.org/docs/mobile/create-first-app.html"},"KMM documentation"),"."),(0,o.kt)("li",{parentName:"ul"},"An Android Virtual Device (AVD) using a compatible architecture\n(x86_64 or arm64).")),(0,o.kt)("details",null,(0,o.kt)("summary",null,"x86 Devices are not Compatible with the Kotlin SDK"),(0,o.kt)("div",null,"The Kotlin SDK does not support x86 devices. Since x86 devices are the default option in Android Studio, you must create an x86_64 or arm64 device in AVD Manager to run applications that use the SDK. You can find images for compatible devices in AVD Manager. Follow these steps to create and use a compatible device:",(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Open AVD Manager in Android Studio by selecting ",(0,o.kt)("inlineCode",{parentName:"p"},"Tools")," > ",(0,o.kt)("inlineCode",{parentName:"p"},"AVD Manager"),".")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Click the ",(0,o.kt)("inlineCode",{parentName:"p"},"Create Virtual Device")," button.")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Select a phone, such as ",(0,o.kt)("inlineCode",{parentName:"p"},"Nexus 5"),".")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Click the ",(0,o.kt)("inlineCode",{parentName:"p"},"Next")," button.")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Navigate to the ",(0,o.kt)("inlineCode",{parentName:"p"},"x86 Images")," tab.")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Click the ",(0,o.kt)("inlineCode",{parentName:"p"},"Download")," link next to an x86_64 device image, such as\n",(0,o.kt)("inlineCode",{parentName:"p"},"S / x86_64 / Android API S (Google Play)"),".")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Click the ",(0,o.kt)("inlineCode",{parentName:"p"},"Finish")," button to close the dialogue when the image\nfinishes downloading.")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Click the ",(0,o.kt)("inlineCode",{parentName:"p"},"Next")," button.")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Name your device and click the ",(0,o.kt)("inlineCode",{parentName:"p"},"Finish")," button to add it to your list\nof virtual devices.")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"At the top of your Android Studio window, select your compatible\ndevice in the AVD dropdown."))),(0,o.kt)("p",null,"You can track x86 support in\n",(0,o.kt)("a",{parentName:"p",href:"https://github.com/realm/realm-kotlin/issues/109"},"this GitHub issue"),"."))))}d.isMDXComponent=!0},8869:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return p},contentTitle:function(){return m},metadata:function(){return c},toc:function(){return k},default:function(){return v}});var i=t(7462),a=t(3366),o=(t(7294),t(3905)),l=t(9877),r=t(8215),d=t(5078),s=t(6871),u=["components"],p={title:"Install (Android)"},m=void 0,c={unversionedId:"sdk/kotlin/install/android",id:"sdk/kotlin/install/android",title:"Install (Android)",description:"Prerequisites",source:"@site/docs/sdk/kotlin/install/android.mdx",sourceDirName:"sdk/kotlin/install",slug:"/sdk/kotlin/install/android",permalink:"/docusaurus-realm/sdk/kotlin/install/android",tags:[],version:"current",frontMatter:{title:"Install (Android)"},sidebar:"kotlin",previous:{title:"Kotlin SDK (Alpha)",permalink:"/docusaurus-realm/sdk/kotlin/intro"},next:{title:"Install (Kotlin Multiplatform)",permalink:"/docusaurus-realm/sdk/kotlin/install/kotlin-multiplatform"}},k=[{value:"Prerequisites",id:"prerequisites",children:[],level:2},{value:"Installation",id:"installation",children:[],level:2}],h={toc:k};function v(e){var n=e.components,t=(0,a.Z)(e,u);return(0,o.kt)("wrapper",(0,i.Z)({},h,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,o.kt)(d.ZP,{mdxType:"PrerequisitesKotlin"}),(0,o.kt)("h2",{id:"installation"},"Installation"),(0,o.kt)(l.Z,{groupId:"sdk-distros",mdxType:"Tabs"},(0,o.kt)(r.Z,{value:"realm-database",label:"Realm Database",mdxType:"TabItem"},(0,o.kt)("p",null,"To add local-only Realm Database to your application, make the\nfollowing changes to your app-level Gradle build file, typically found\nat ",(0,o.kt)("inlineCode",{parentName:"p"},"<project>/app/build.gradle"),":"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Add ",(0,o.kt)("inlineCode",{parentName:"li"},"io.realm.kotlin:library-base")," to the list of dependencies."),(0,o.kt)("li",{parentName:"ul"},"Add ",(0,o.kt)("inlineCode",{parentName:"li"},"io.realm.kotlin")," to the list of plugins."),(0,o.kt)("li",{parentName:"ul"},"To use coroutines with the SDK, add\n",(0,o.kt)("inlineCode",{parentName:"li"},"org.jetbrains.kotlinx:kotlinx-coroutines-core"),"\nto the list of dependencies.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-kotlin"},"\nplugins {\n    id 'com.android.application'\n    // highlight-next-line\n    id 'org.jetbrains.kotlin.android'\n    id 'io.realm.kotlin' version \""+s.R.kotlin_sdk_version+"\"\n}\nandroid {\n    compileSdk 31\n    defaultConfig {\n        applicationId \"com.mongodb.realm.testkmmandroidonly\"\n        minSdk 28\n        targetSdk 31\n        versionCode 1\n        versionName \"1.0\"\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\n    }\n    buildTypes {\n        release {\n            minifyEnabled false\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\n        }\n    }\n    compileOptions {\n        sourceCompatibility JavaVersion.VERSION_11\n        targetCompatibility JavaVersion.VERSION_11\n    }\n    kotlinOptions {\n        jvmTarget = '1.8'\n    }\n}\ndependencies {\n    // highlight-next-line\n    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:"+s.R.kotlinx_coroutines_version+"'\n    // highlight-next-line\n    implementation 'io.realm.kotlin:library-base:"+s.R.kotlin_sdk_version+"'\n    implementation 'androidx.core:core-ktx:1.7.0'\n    implementation 'androidx.appcompat:appcompat:1.4.1'\n    implementation 'com.google.android.material:material:1.5.0'\n    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'\n    testImplementation 'junit:junit:4.13.2'\n    androidTestImplementation 'androidx.test.ext:junit:1.1.3'\n    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'\n}\n"))),(0,o.kt)(r.Z,{value:"sync",label:"Sync",mdxType:"TabItem"},(0,o.kt)("p",null,"To add Realm Database and Sync to your application, make the following changes to your app-level Gradle build file, typically found at ",(0,o.kt)("inlineCode",{parentName:"p"},"<project>/app/build.gradle"),":"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Add ",(0,o.kt)("inlineCode",{parentName:"li"},"io.realm.kotlin:library-sync")," to the list of dependencies."),(0,o.kt)("li",{parentName:"ul"},"Add ",(0,o.kt)("inlineCode",{parentName:"li"},"io.realm.kotlin")," to the list of plugins."),(0,o.kt)("li",{parentName:"ul"},"To use coroutines with the SDK, add\n",(0,o.kt)("inlineCode",{parentName:"li"},"org.jetbrains.kotlinx:kotlinx-coroutines-core"),"\nto the list of dependencies.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-kotlin"},"\nplugins {\n    id 'com.android.application'\n    // highlight-next-line\n    id 'org.jetbrains.kotlin.android'\n    id 'io.realm.kotlin' version \""+s.R.kotlin_sdk_version+"\"\n}\nandroid {\n    compileSdk 31\n    defaultConfig {\n        applicationId \"com.mongodb.realm.testkmmandroidonly\"\n        minSdk 28\n        targetSdk 31\n        versionCode 1\n        versionName \"1.0\"\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\n    }\n    buildTypes {\n        release {\n            minifyEnabled false\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\n        }\n    }\n    compileOptions {\n        sourceCompatibility JavaVersion.VERSION_11\n        targetCompatibility JavaVersion.VERSION_11\n    }\n    kotlinOptions {\n        jvmTarget = '1.8'\n    }\n}\ndependencies {\n    // highlight-next-line\n    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:"+s.R.kotlinx_coroutines_version+"'\n    // highlight-next-line\n    implementation 'io.realm.kotlin:library-sync:"+s.R.kotlin_sdk_version+"'\n    implementation 'androidx.core:core-ktx:1.7.0'\n    implementation 'androidx.appcompat:appcompat:1.4.1'\n    implementation 'com.google.android.material:material:1.5.0'\n    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'\n    testImplementation 'junit:junit:4.13.2'\n    androidTestImplementation 'androidx.test.ext:junit:1.1.3'\n    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'\n}\n")))),(0,o.kt)("p",null,"After updating the Gradle configuration, resolve the dependencies by clicking File > Sync Project with Gradle Files in the Android Studio menu bar. You can now use the Kotlin SDK in your application."))}v.isMDXComponent=!0}}]);